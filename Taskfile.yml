version: '3'

vars:
  MANAGEMENT_CLUSTER_NAME: mgmt-cluster

tasks:
  default:
    cmds:
      - task -l
    desc: Display list of available tasks

  prereq:install:
    desc: Install all prerequisites
    cmds:
      - task: prereq:install-k3d
      - task: prereq:install-kubectl
      - task: prereq:install-helm
    summary: Install all required tools and dependencies

  prereq:install-k3d:
    desc: Install k3d
    cmds:
      - echo "Installing k3d..."
      - wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

  prereq:install-kubectl:
    desc: Install kubectl
    cmds:
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - sudo mv kubectl /usr/local/bin/

  prereq:install-helm:
    desc: Install Helm
    cmds:
      - echo "Installing Helm..."
      - curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

  mgmt:create:
    desc: Create management cluster with k3d
    cmds:
      - echo "Creating k3d management cluster..."
      - k3d cluster create {{.MANAGEMENT_CLUSTER_NAME}} --servers 1 --agents 2 --port 6443:6443 --k3s-arg "--disable=traefik@server:0"
      - echo "Management cluster created and configured"
      - kubectl get nodes

  mgmt:delete:
    desc: Delete management cluster
    cmds:
      - echo "Deleting k3d management cluster..."
      - k3d cluster delete {{.MANAGEMENT_CLUSTER_NAME}}
      
  argocd:bootstrap:
    desc: Bootstrap ArgoCD on the management cluster
    cmds:
      - echo "Creating ArgoCD namespace..."
      - kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
      - echo "Installing ArgoCD using Helm..."
      - helm repo add argo https://argoproj.github.io/argo-helm
      - helm repo update
      - helm install argocd argo/argo-cd --namespace argocd -f gitops/argocd/values.yaml
      - echo "Waiting for ArgoCD pods to be ready..."
      - kubectl wait --for=condition=available deployment/argocd-server --timeout=300s -n argocd
      - echo "ArgoCD installed successfully. Run the following commands to access it:"
      - echo "  kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d"
      - echo "  kubectl port-forward svc/argocd-server -n argocd 8080:443"
  
  argocd:apply-apps:
    desc: Apply ArgoCD Applications for GitOps
    cmds:
      - echo "Applying the ArgoCD application manifest..."
      - kubectl apply -f gitops/argocd/argocd-app.yaml
      - echo "Applying the root application manifest..."
      - kubectl apply -f gitops/root-app.yaml
      - echo "GitOps setup complete."